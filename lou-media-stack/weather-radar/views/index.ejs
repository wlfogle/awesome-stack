<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Radar</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #2c3e50, #34495e);
            min-height: 100vh;
            color: white;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }

        .header .location {
            font-size: 1.2em;
            opacity: 0.9;
        }

        .radar-container {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin-bottom: 30px;
        }

        .radar-map {
            width: 100%;
            height: 600px;
            border-radius: 10px;
            background: #1a1a1a;
            position: relative;
            overflow: hidden;
        }

        .radar-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><radialGradient id="radar" cx="50%" cy="50%" r="50%"><stop offset="0%" style="stop-color:rgba(0,255,0,0.1);stop-opacity:1" /><stop offset="100%" style="stop-color:rgba(0,255,0,0);stop-opacity:0" /></radialGradient></defs><circle cx="50" cy="50" r="50" fill="url(%23radar)" /></svg>') center/cover;
            animation: radarSweep 4s linear infinite;
        }

        @keyframes radarSweep {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .radar-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .info-card {
            background: rgba(255, 255, 255, 0.05);
            padding: 20px;
            border-radius: 10px;
            text-align: center;
        }

        .info-card h3 {
            margin-bottom: 10px;
            color: #74b9ff;
        }

        .controls {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .control-btn {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            padding: 12px 25px;
            border-radius: 25px;
            color: white;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .control-btn:hover, .control-btn.active {
            background: rgba(116, 185, 255, 0.3);
            transform: translateY(-2px);
        }

        .legend {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
            flex-wrap: wrap;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .legend-color {
            width: 20px;
            height: 20px;
            border-radius: 3px;
        }

        .legend-color.light { background: #90EE90; }
        .legend-color.moderate { background: #FFD700; }
        .legend-color.heavy { background: #FFA500; }
        .legend-color.severe { background: #FF4500; }

        .back-link {
            display: inline-block;
            background: rgba(255, 255, 255, 0.2);
            padding: 15px 30px;
            border-radius: 25px;
            text-decoration: none;
            color: white;
            font-weight: bold;
            transition: all 0.3s ease;
            margin: 20px auto;
            display: block;
            text-align: center;
            max-width: 200px;
        }

        .back-link:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
        }

        .radar-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 10px;
        }

        .loading {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 600px;
            font-size: 1.2em;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: #74b9ff;
            animation: spin 1s ease-in-out infinite;
            margin-right: 15px;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .last-updated {
            text-align: center;
            opacity: 0.7;
            margin-top: 20px;
        }

        @media (max-width: 768px) {
            .radar-map {
                height: 400px;
            }
            
            .controls {
                justify-content: center;
            }
            
            .legend {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-satellite-dish"></i> Weather Radar</h1>
            <div class="location">
                <i class="fas fa-map-marker-alt"></i> 
                <%= location || 'Current Location' %>
            </div>
        </div>

        <div class="radar-container">
            <div class="controls">
                <button class="control-btn active" onclick="loadRadarLayer('precipitation')">
                    <i class="fas fa-cloud-rain"></i> Precipitation
                </button>
                <button class="control-btn" onclick="loadRadarLayer('clouds')">
                    <i class="fas fa-cloud"></i> Clouds
                </button>
                <button class="control-btn" onclick="loadRadarLayer('temperature')">
                    <i class="fas fa-thermometer-half"></i> Temperature
                </button>
                <button class="control-btn" onclick="loadRadarLayer('wind')">
                    <i class="fas fa-wind"></i> Wind
                </button>
            </div>

            <div class="radar-map" id="radarMap">
                <% if (radarImage) { %>
                    <img src="<%= radarImage %>" alt="Weather Radar" class="radar-image" onerror="showError()">
                <% } else { %>
                    <div class="loading">
                        <div class="spinner"></div>
                        Loading radar data...
                    </div>
                <% } %>
            </div>

            <div class="legend">
                <div class="legend-item">
                    <div class="legend-color light"></div>
                    <span>Light</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color moderate"></div>
                    <span>Moderate</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color heavy"></div>
                    <span>Heavy</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color severe"></div>
                    <span>Severe</span>
                </div>
            </div>
        </div>

        <div class="radar-info">
            <div class="info-card">
                <h3><i class="fas fa-clock"></i> Last Updated</h3>
                <p><%= new Date().toLocaleString() %></p>
            </div>
            <div class="info-card">
                <h3><i class="fas fa-eye"></i> Visibility</h3>
                <p>10 miles</p>
            </div>
            <div class="info-card">
                <h3><i class="fas fa-tachometer-alt"></i> Update Frequency</h3>
                <p>Every 15 minutes</p>
            </div>
            <div class="info-card">
                <h3><i class="fas fa-map"></i> Coverage Area</h3>
                <p>200 mile radius</p>
            </div>
        </div>

        <a href="https://weather.<%= process.env.DOMAIN || 'mediastack.local' %>/" class="back-link">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>

        <div class="last-updated">
            <i class="fas fa-sync-alt"></i> Auto-refresh enabled â€¢ Next update in <span id="countdown">15:00</span>
        </div>
    </div>

    <script>
        let currentLayer = 'precipitation';
        let countdown = 900; // 15 minutes in seconds
        
        function loadRadarLayer(layer) {
            currentLayer = layer;
            
            // Update active button
            document.querySelectorAll('.control-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.closest('.control-btn').classList.add('active');
            
            const radarMap = document.getElementById('radarMap');
            radarMap.innerHTML = `
                <div class="loading">
                    <div class="spinner"></div>
                    Loading ${layer} radar...
                </div>
            `;
            
            // Simulate loading different radar layers
            setTimeout(() => {
                const img = document.createElement('img');
                img.className = 'radar-image';
                img.alt = `${layer} radar`;
                img.onerror = showError;
                
                // Use OpenWeather radar tiles based on layer type
                const baseUrl = 'https://tile.openweathermap.org/map/';
                const apiKey = '<%= process.env.OPENWEATHER_API_KEY || "" %>';
                const lat = <%= lat || 40.7128 %>;
                const lon = <%= lon || -74.0060 %>;
                const zoom = 8;
                const x = Math.floor((lon + 180) / 360 * Math.pow(2, zoom));
                const y = Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom));
                
                let layerCode = 'precipitation_new';
                switch(layer) {
                    case 'clouds': layerCode = 'clouds_new'; break;
                    case 'temperature': layerCode = 'temp_new'; break;
                    case 'wind': layerCode = 'wind_new'; break;
                }
                
                img.src = `${baseUrl}${layerCode}/${zoom}/${x}/${y}.png?appid=${apiKey}`;
                
                radarMap.innerHTML = '';
                radarMap.appendChild(img);
            }, 1000);
        }
        
        function showError() {
            document.getElementById('radarMap').innerHTML = `
                <div class="loading" style="color: #ff7675;">
                    <i class="fas fa-exclamation-triangle" style="margin-right: 15px; font-size: 1.5em;"></i>
                    Unable to load radar data. Please try again later.
                </div>
            `;
        }
        
        // Countdown timer
        function updateCountdown() {
            const minutes = Math.floor(countdown / 60);
            const seconds = countdown % 60;
            document.getElementById('countdown').textContent = 
                `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
            
            if (countdown <= 0) {
                location.reload();
            } else {
                countdown--;
            }
        }
        
        // Update countdown every second
        setInterval(updateCountdown, 1000);
        
        // Auto-refresh every 15 minutes
        setTimeout(() => {
            location.reload();
        }, 900000);
    </script>
</body>
</html>
