name: "Prepare for Build"
description: "Setup all required dependencies and secrets for building the given platform"

inputs:
  platform:
    description: "Platform to be Built"
    required: true

  # Config
  skip-core:
    description: "Skip Installing Core Files"
    required: false
    default: "false"

  # Secret Keys
  android-key-jks:
    description: "Android Signing Key"
    required: false
    default: ""
  android-key-properties:
    description: "Android Signing Key Properties"
    required: false
    default: ""
  appstore-connect-key:
    description: "App Store Connect API Key"
    required: false
    default: ""
  code-signing-certificate:
    description: "Code Signing Certificate"
    required: false
    default: ""
  google-play-key:
    description: "Google Play Store API Key"
    required: false
    default: ""
  match-ssh-private-key:
    description: "Fastlane Match SSH Key"
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Prepare Core
      if: ${{ inputs.skip-core == 'false' }}
      uses: actions/download-artifact@v4
      with:
        name: core-files

    - name: Prepare Folders
      shell: bash
      run: |
        mkdir -p output
        mkdir -p keys

    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        cache: true
        cache-key: ${{ github.sha }}

    - name: Install Java
      if: ${{ inputs.platform == 'android' }}
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 17

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install Ruby
      if: ${{ inputs.platform == 'android' || inputs.platform == 'ios' || inputs.platform == 'macos' }}
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Install XCode
      if: ${{ inputs.platform == 'ios' || inputs.platform == 'macos' }}
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Setup Docker
      if: ${{ inputs.platform == 'web' }}
      uses: docker/setup-buildx-action@v2

    - name: Setup Match SSH Keys
      if: ${{ inputs.platform == 'ios' || inputs.platform == 'macos' }}
      uses: webfactory/ssh-agent@v0.6.0
      with:
        ssh-private-key: ${{ inputs.match-ssh-private-key }}

    - name: Setup Secret Keys
      shell: bash
      run: |
        echo ${{ inputs.appstore-connect-key }} | base64 --decode > keys/appstore.p8
        echo ${{ inputs.code-signing-certificate }} | base64 --decode > keys/codesigning.pfx
        echo ${{ inputs.google-play-key }} | base64 --decode > keys/googleplay.json
        echo ${{ inputs.android-key-jks }} | base64 --decode > android/key.jks
        echo ${{ inputs.android-key-properties }} | base64 --decode > android/key.properties

    - name: Setup Android Platform
      if: ${{ inputs.platform == 'android' }}
      shell: bash
      run: |
        (cd android && bundle install)

    - name: Setup iOS Platform
      if: ${{ inputs.platform == 'ios' }}
      shell: bash
      run: |
        (cd ios && bundle install)

    - name: Setup Linux Platform
      if: ${{ inputs.platform == 'linux' }}
      shell: bash
      run: |
        flutter config --enable-linux-desktop
        sudo iptables -P FORWARD ACCEPT
        sudo apt-get update -y
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

    - name: Setup macOS Platform
      if: ${{ inputs.platform == 'macos' }}
      shell: bash
      run: |
        flutter config --enable-macos-desktop
        (cd macos && bundle install)

    - name: Setup All Platforms
      shell: bash
      run: |
        flutter pub get
