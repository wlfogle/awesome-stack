// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package hardcover

import (
	"context"
	"encoding/json"

	"github.com/Khan/genqlient/graphql"
)

// GetAuthorAuthors_by_pkAuthors includes the requested fields of the GraphQL type authors.
// The GraphQL type's documentation follows.
//
// columns and relationships of "authors"
type GetAuthorAuthors_by_pkAuthors struct {
	Location string `json:"location"`
	Slug     string `json:"slug"`
}

// GetLocation returns GetAuthorAuthors_by_pkAuthors.Location, and is useful for accessing the field via an interface.
func (v *GetAuthorAuthors_by_pkAuthors) GetLocation() string { return v.Location }

// GetSlug returns GetAuthorAuthors_by_pkAuthors.Slug, and is useful for accessing the field via an interface.
func (v *GetAuthorAuthors_by_pkAuthors) GetSlug() string { return v.Slug }

// GetAuthorEditionsAuthors includes the requested fields of the GraphQL type authors.
// The GraphQL type's documentation follows.
//
// columns and relationships of "authors"
type GetAuthorEditionsAuthors struct {
	Location string `json:"location"`
	Id       int64  `json:"id"`
	Slug     string `json:"slug"`
	// An array relationship
	Contributions []GetAuthorEditionsAuthorsContributions `json:"contributions"`
	Identifiers   json.RawMessage                         `json:"identifiers"`
}

// GetLocation returns GetAuthorEditionsAuthors.Location, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthors) GetLocation() string { return v.Location }

// GetId returns GetAuthorEditionsAuthors.Id, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthors) GetId() int64 { return v.Id }

// GetSlug returns GetAuthorEditionsAuthors.Slug, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthors) GetSlug() string { return v.Slug }

// GetContributions returns GetAuthorEditionsAuthors.Contributions, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthors) GetContributions() []GetAuthorEditionsAuthorsContributions {
	return v.Contributions
}

// GetIdentifiers returns GetAuthorEditionsAuthors.Identifiers, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthors) GetIdentifiers() json.RawMessage { return v.Identifiers }

// GetAuthorEditionsAuthorsContributions includes the requested fields of the GraphQL type contributions.
// The GraphQL type's documentation follows.
//
// columns and relationships of "contributions"
type GetAuthorEditionsAuthorsContributions struct {
	// An object relationship
	Book GetAuthorEditionsAuthorsContributionsBookBooks `json:"book"`
}

// GetBook returns GetAuthorEditionsAuthorsContributions.Book, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthorsContributions) GetBook() GetAuthorEditionsAuthorsContributionsBookBooks {
	return v.Book
}

// GetAuthorEditionsAuthorsContributionsBookBooks includes the requested fields of the GraphQL type books.
// The GraphQL type's documentation follows.
//
// columns and relationships of "books"
type GetAuthorEditionsAuthorsContributionsBookBooks struct {
	Id            int64  `json:"id"`
	Title         string `json:"title"`
	Ratings_count int64  `json:"ratings_count"`
	// An array relationship
	Book_mappings []GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings `json:"book_mappings"`
}

// GetId returns GetAuthorEditionsAuthorsContributionsBookBooks.Id, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthorsContributionsBookBooks) GetId() int64 { return v.Id }

// GetTitle returns GetAuthorEditionsAuthorsContributionsBookBooks.Title, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthorsContributionsBookBooks) GetTitle() string { return v.Title }

// GetRatings_count returns GetAuthorEditionsAuthorsContributionsBookBooks.Ratings_count, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthorsContributionsBookBooks) GetRatings_count() int64 {
	return v.Ratings_count
}

// GetBook_mappings returns GetAuthorEditionsAuthorsContributionsBookBooks.Book_mappings, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthorsContributionsBookBooks) GetBook_mappings() []GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings {
	return v.Book_mappings
}

// GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings includes the requested fields of the GraphQL type book_mappings.
// The GraphQL type's documentation follows.
//
// columns and relationships of "book_mappings"
type GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings struct {
	Book_id     int64  `json:"book_id"`
	Edition_id  int64  `json:"edition_id"`
	External_id string `json:"external_id"`
}

// GetBook_id returns GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings.Book_id, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings) GetBook_id() int64 {
	return v.Book_id
}

// GetEdition_id returns GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings.Edition_id, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings) GetEdition_id() int64 {
	return v.Edition_id
}

// GetExternal_id returns GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings.External_id, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsAuthorsContributionsBookBooksBook_mappings) GetExternal_id() string {
	return v.External_id
}

// GetAuthorEditionsResponse is returned by GetAuthorEditions on success.
type GetAuthorEditionsResponse struct {
	// fetch data from the table: "authors"
	Authors []GetAuthorEditionsAuthors `json:"authors"`
}

// GetAuthors returns GetAuthorEditionsResponse.Authors, and is useful for accessing the field via an interface.
func (v *GetAuthorEditionsResponse) GetAuthors() []GetAuthorEditionsAuthors { return v.Authors }

// GetAuthorResponse is returned by GetAuthor on success.
type GetAuthorResponse struct {
	// fetch data from the table: "authors" using primary key columns
	Authors_by_pk GetAuthorAuthors_by_pkAuthors `json:"authors_by_pk"`
}

// GetAuthors_by_pk returns GetAuthorResponse.Authors_by_pk, and is useful for accessing the field via an interface.
func (v *GetAuthorResponse) GetAuthors_by_pk() GetAuthorAuthors_by_pkAuthors { return v.Authors_by_pk }

// GetBookBook_mappings includes the requested fields of the GraphQL type book_mappings.
// The GraphQL type's documentation follows.
//
// columns and relationships of "book_mappings"
type GetBookBook_mappings struct {
	External_id string `json:"external_id"`
	// An object relationship
	Edition GetBookBook_mappingsEditionEditions `json:"edition"`
	// An object relationship
	Book GetBookBook_mappingsBookBooks `json:"book"`
}

// GetExternal_id returns GetBookBook_mappings.External_id, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappings) GetExternal_id() string { return v.External_id }

// GetEdition returns GetBookBook_mappings.Edition, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappings) GetEdition() GetBookBook_mappingsEditionEditions { return v.Edition }

// GetBook returns GetBookBook_mappings.Book, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappings) GetBook() GetBookBook_mappingsBookBooks { return v.Book }

// GetBookBook_mappingsBookBooks includes the requested fields of the GraphQL type books.
// The GraphQL type's documentation follows.
//
// columns and relationships of "books"
type GetBookBook_mappingsBookBooks struct {
	Id           int64           `json:"id"`
	Title        string          `json:"title"`
	Subtitle     string          `json:"subtitle"`
	Description  string          `json:"description"`
	Release_date string          `json:"release_date"`
	Cached_tags  json.RawMessage `json:"cached_tags"`
	Cached_image json.RawMessage `json:"cached_image"`
	// An array relationship
	Contributions []GetBookBook_mappingsBookBooksContributions `json:"contributions"`
	Slug          string                                       `json:"slug"`
	// An array relationship
	Book_series []GetBookBook_mappingsBookBooksBook_series `json:"book_series"`
	// An array relationship
	Book_mappings []GetBookBook_mappingsBookBooksBook_mappings `json:"book_mappings"`
	Rating        float64                                      `json:"rating"`
	Ratings_count int64                                        `json:"ratings_count"`
}

// GetId returns GetBookBook_mappingsBookBooks.Id, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetId() int64 { return v.Id }

// GetTitle returns GetBookBook_mappingsBookBooks.Title, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetTitle() string { return v.Title }

// GetSubtitle returns GetBookBook_mappingsBookBooks.Subtitle, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetSubtitle() string { return v.Subtitle }

// GetDescription returns GetBookBook_mappingsBookBooks.Description, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetDescription() string { return v.Description }

// GetRelease_date returns GetBookBook_mappingsBookBooks.Release_date, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetRelease_date() string { return v.Release_date }

// GetCached_tags returns GetBookBook_mappingsBookBooks.Cached_tags, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetCached_tags() json.RawMessage { return v.Cached_tags }

// GetCached_image returns GetBookBook_mappingsBookBooks.Cached_image, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetCached_image() json.RawMessage { return v.Cached_image }

// GetContributions returns GetBookBook_mappingsBookBooks.Contributions, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetContributions() []GetBookBook_mappingsBookBooksContributions {
	return v.Contributions
}

// GetSlug returns GetBookBook_mappingsBookBooks.Slug, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetSlug() string { return v.Slug }

// GetBook_series returns GetBookBook_mappingsBookBooks.Book_series, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetBook_series() []GetBookBook_mappingsBookBooksBook_series {
	return v.Book_series
}

// GetBook_mappings returns GetBookBook_mappingsBookBooks.Book_mappings, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetBook_mappings() []GetBookBook_mappingsBookBooksBook_mappings {
	return v.Book_mappings
}

// GetRating returns GetBookBook_mappingsBookBooks.Rating, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetRating() float64 { return v.Rating }

// GetRatings_count returns GetBookBook_mappingsBookBooks.Ratings_count, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooks) GetRatings_count() int64 { return v.Ratings_count }

// GetBookBook_mappingsBookBooksBook_mappings includes the requested fields of the GraphQL type book_mappings.
// The GraphQL type's documentation follows.
//
// columns and relationships of "book_mappings"
type GetBookBook_mappingsBookBooksBook_mappings struct {
	Dto_external json.RawMessage `json:"dto_external"`
}

// GetDto_external returns GetBookBook_mappingsBookBooksBook_mappings.Dto_external, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksBook_mappings) GetDto_external() json.RawMessage {
	return v.Dto_external
}

// GetBookBook_mappingsBookBooksBook_series includes the requested fields of the GraphQL type book_series.
// The GraphQL type's documentation follows.
//
// columns and relationships of "book_series"
type GetBookBook_mappingsBookBooksBook_series struct {
	Position float32 `json:"position"`
	// An object relationship
	Series GetBookBook_mappingsBookBooksBook_seriesSeries `json:"series"`
}

// GetPosition returns GetBookBook_mappingsBookBooksBook_series.Position, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksBook_series) GetPosition() float32 { return v.Position }

// GetSeries returns GetBookBook_mappingsBookBooksBook_series.Series, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksBook_series) GetSeries() GetBookBook_mappingsBookBooksBook_seriesSeries {
	return v.Series
}

// GetBookBook_mappingsBookBooksBook_seriesSeries includes the requested fields of the GraphQL type series.
// The GraphQL type's documentation follows.
//
// columns and relationships of "series"
type GetBookBook_mappingsBookBooksBook_seriesSeries struct {
	Id          int64           `json:"id"`
	Name        string          `json:"name"`
	Description string          `json:"description"`
	Identifiers json.RawMessage `json:"identifiers"`
}

// GetId returns GetBookBook_mappingsBookBooksBook_seriesSeries.Id, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksBook_seriesSeries) GetId() int64 { return v.Id }

// GetName returns GetBookBook_mappingsBookBooksBook_seriesSeries.Name, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksBook_seriesSeries) GetName() string { return v.Name }

// GetDescription returns GetBookBook_mappingsBookBooksBook_seriesSeries.Description, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksBook_seriesSeries) GetDescription() string {
	return v.Description
}

// GetIdentifiers returns GetBookBook_mappingsBookBooksBook_seriesSeries.Identifiers, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksBook_seriesSeries) GetIdentifiers() json.RawMessage {
	return v.Identifiers
}

// GetBookBook_mappingsBookBooksContributions includes the requested fields of the GraphQL type contributions.
// The GraphQL type's documentation follows.
//
// columns and relationships of "contributions"
type GetBookBook_mappingsBookBooksContributions struct {
	Contributable_type string `json:"contributable_type"`
	Contribution       string `json:"contribution"`
	// An object relationship
	Author GetBookBook_mappingsBookBooksContributionsAuthorAuthors `json:"author"`
}

// GetContributable_type returns GetBookBook_mappingsBookBooksContributions.Contributable_type, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksContributions) GetContributable_type() string {
	return v.Contributable_type
}

// GetContribution returns GetBookBook_mappingsBookBooksContributions.Contribution, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksContributions) GetContribution() string { return v.Contribution }

// GetAuthor returns GetBookBook_mappingsBookBooksContributions.Author, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksContributions) GetAuthor() GetBookBook_mappingsBookBooksContributionsAuthorAuthors {
	return v.Author
}

// GetBookBook_mappingsBookBooksContributionsAuthorAuthors includes the requested fields of the GraphQL type authors.
// The GraphQL type's documentation follows.
//
// columns and relationships of "authors"
type GetBookBook_mappingsBookBooksContributionsAuthorAuthors struct {
	Id           int64           `json:"id"`
	Name         string          `json:"name"`
	Slug         string          `json:"slug"`
	Bio          string          `json:"bio"`
	Cached_image json.RawMessage `json:"cached_image"`
}

// GetId returns GetBookBook_mappingsBookBooksContributionsAuthorAuthors.Id, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksContributionsAuthorAuthors) GetId() int64 { return v.Id }

// GetName returns GetBookBook_mappingsBookBooksContributionsAuthorAuthors.Name, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksContributionsAuthorAuthors) GetName() string { return v.Name }

// GetSlug returns GetBookBook_mappingsBookBooksContributionsAuthorAuthors.Slug, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksContributionsAuthorAuthors) GetSlug() string { return v.Slug }

// GetBio returns GetBookBook_mappingsBookBooksContributionsAuthorAuthors.Bio, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksContributionsAuthorAuthors) GetBio() string { return v.Bio }

// GetCached_image returns GetBookBook_mappingsBookBooksContributionsAuthorAuthors.Cached_image, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsBookBooksContributionsAuthorAuthors) GetCached_image() json.RawMessage {
	return v.Cached_image
}

// GetBookBook_mappingsEditionEditions includes the requested fields of the GraphQL type editions.
// The GraphQL type's documentation follows.
//
// columns and relationships of "editions"
type GetBookBook_mappingsEditionEditions struct {
	Id             int64  `json:"id"`
	Title          string `json:"title"`
	Subtitle       string `json:"subtitle"`
	Asin           string `json:"asin"`
	Isbn_13        string `json:"isbn_13"`
	Edition_format string `json:"edition_format"`
	Pages          int64  `json:"pages"`
	Audio_seconds  int64  `json:"audio_seconds"`
	// An object relationship
	Language GetBookBook_mappingsEditionEditionsLanguageLanguages `json:"language"`
	// An object relationship
	Publisher    GetBookBook_mappingsEditionEditionsPublisherPublishers `json:"publisher"`
	Release_date string                                                 `json:"release_date"`
	Description  string                                                 `json:"description"`
	Identifiers  json.RawMessage                                        `json:"identifiers"`
	Book_id      int64                                                  `json:"book_id"`
}

// GetId returns GetBookBook_mappingsEditionEditions.Id, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetId() int64 { return v.Id }

// GetTitle returns GetBookBook_mappingsEditionEditions.Title, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetTitle() string { return v.Title }

// GetSubtitle returns GetBookBook_mappingsEditionEditions.Subtitle, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetSubtitle() string { return v.Subtitle }

// GetAsin returns GetBookBook_mappingsEditionEditions.Asin, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetAsin() string { return v.Asin }

// GetIsbn_13 returns GetBookBook_mappingsEditionEditions.Isbn_13, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetIsbn_13() string { return v.Isbn_13 }

// GetEdition_format returns GetBookBook_mappingsEditionEditions.Edition_format, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetEdition_format() string { return v.Edition_format }

// GetPages returns GetBookBook_mappingsEditionEditions.Pages, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetPages() int64 { return v.Pages }

// GetAudio_seconds returns GetBookBook_mappingsEditionEditions.Audio_seconds, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetAudio_seconds() int64 { return v.Audio_seconds }

// GetLanguage returns GetBookBook_mappingsEditionEditions.Language, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetLanguage() GetBookBook_mappingsEditionEditionsLanguageLanguages {
	return v.Language
}

// GetPublisher returns GetBookBook_mappingsEditionEditions.Publisher, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetPublisher() GetBookBook_mappingsEditionEditionsPublisherPublishers {
	return v.Publisher
}

// GetRelease_date returns GetBookBook_mappingsEditionEditions.Release_date, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetRelease_date() string { return v.Release_date }

// GetDescription returns GetBookBook_mappingsEditionEditions.Description, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetDescription() string { return v.Description }

// GetIdentifiers returns GetBookBook_mappingsEditionEditions.Identifiers, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetIdentifiers() json.RawMessage { return v.Identifiers }

// GetBook_id returns GetBookBook_mappingsEditionEditions.Book_id, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditions) GetBook_id() int64 { return v.Book_id }

// GetBookBook_mappingsEditionEditionsLanguageLanguages includes the requested fields of the GraphQL type languages.
// The GraphQL type's documentation follows.
//
// columns and relationships of "languages"
type GetBookBook_mappingsEditionEditionsLanguageLanguages struct {
	Language string `json:"language"`
}

// GetLanguage returns GetBookBook_mappingsEditionEditionsLanguageLanguages.Language, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditionsLanguageLanguages) GetLanguage() string {
	return v.Language
}

// GetBookBook_mappingsEditionEditionsPublisherPublishers includes the requested fields of the GraphQL type publishers.
// The GraphQL type's documentation follows.
//
// columns and relationships of "publishers"
type GetBookBook_mappingsEditionEditionsPublisherPublishers struct {
	Name string `json:"name"`
}

// GetName returns GetBookBook_mappingsEditionEditionsPublisherPublishers.Name, and is useful for accessing the field via an interface.
func (v *GetBookBook_mappingsEditionEditionsPublisherPublishers) GetName() string { return v.Name }

// GetBookResponse is returned by GetBook on success.
type GetBookResponse struct {
	// An array relationship
	Book_mappings []GetBookBook_mappings `json:"book_mappings"`
}

// GetBook_mappings returns GetBookResponse.Book_mappings, and is useful for accessing the field via an interface.
func (v *GetBookResponse) GetBook_mappings() []GetBookBook_mappings { return v.Book_mappings }

// __GetAuthorEditionsInput is used internally by genqlient
type __GetAuthorEditionsInput struct {
	Id     int64 `json:"id"`
	Limit  int64 `json:"limit"`
	Offset int64 `json:"offset"`
}

// GetId returns __GetAuthorEditionsInput.Id, and is useful for accessing the field via an interface.
func (v *__GetAuthorEditionsInput) GetId() int64 { return v.Id }

// GetLimit returns __GetAuthorEditionsInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetAuthorEditionsInput) GetLimit() int64 { return v.Limit }

// GetOffset returns __GetAuthorEditionsInput.Offset, and is useful for accessing the field via an interface.
func (v *__GetAuthorEditionsInput) GetOffset() int64 { return v.Offset }

// __GetAuthorInput is used internally by genqlient
type __GetAuthorInput struct {
	Id int64 `json:"id"`
}

// GetId returns __GetAuthorInput.Id, and is useful for accessing the field via an interface.
func (v *__GetAuthorInput) GetId() int64 { return v.Id }

// __GetBookInput is used internally by genqlient
type __GetBookInput struct {
	GrBookID string `json:"grBookID"`
}

// GetGrBookID returns __GetBookInput.GrBookID, and is useful for accessing the field via an interface.
func (v *__GetBookInput) GetGrBookID() string { return v.GrBookID }

// The query or mutation executed by GetAuthor.
const GetAuthor_Operation = `
query GetAuthor ($id: Int!) {
	authors_by_pk(id: $id) {
		location
		slug
	}
}
`

func GetAuthor(
	ctx_ context.Context,
	client_ graphql.Client,
	id int64,
) (*GetAuthorResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetAuthor",
		Query:  GetAuthor_Operation,
		Variables: &__GetAuthorInput{
			Id: id,
		},
	}
	var err_ error

	var data_ GetAuthorResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetAuthorEditions.
const GetAuthorEditions_Operation = `
query GetAuthorEditions ($id: Int!, $limit: Int!, $offset: Int!) {
	authors(limit: 1, where: {id:{_eq:$id}}) {
		location
		id
		slug
		contributions(limit: $limit, offset: $offset, order_by: {id:asc}, where: {contributable_type:{_eq:"Book"}}) {
			book {
				id
				title
				ratings_count
				book_mappings(limit: 1, where: {platform_id:{_eq:1}}) {
					book_id
					edition_id
					external_id
				}
			}
		}
		identifiers(path: "goodreads[0]")
	}
}
`

func GetAuthorEditions(
	ctx_ context.Context,
	client_ graphql.Client,
	id int64,
	limit int64,
	offset int64,
) (*GetAuthorEditionsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetAuthorEditions",
		Query:  GetAuthorEditions_Operation,
		Variables: &__GetAuthorEditionsInput{
			Id:     id,
			Limit:  limit,
			Offset: offset,
		},
	}
	var err_ error

	var data_ GetAuthorEditionsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetBook.
const GetBook_Operation = `
query GetBook ($grBookID: String!) {
	book_mappings(limit: 1, where: {platform_id:{_eq:1},external_id:{_eq:$grBookID}}) {
		external_id
		edition {
			id
			title
			subtitle
			asin
			isbn_13
			edition_format
			pages
			audio_seconds
			language {
				language
			}
			publisher {
				name
			}
			release_date
			description
			identifiers
			book_id
		}
		book {
			id
			title
			subtitle
			description
			release_date
			cached_tags(path: "$.Genre")
			cached_image(path: "url")
			contributions {
				contributable_type
				contribution
				author {
					id
					name
					slug
					bio
					cached_image(path: "url")
				}
			}
			slug
			book_series {
				position
				series {
					id
					name
					description
					identifiers
				}
			}
			book_mappings {
				dto_external
			}
			rating
			ratings_count
		}
	}
}
`

func GetBook(
	ctx_ context.Context,
	client_ graphql.Client,
	grBookID string,
) (*GetBookResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetBook",
		Query:  GetBook_Operation,
		Variables: &__GetBookInput{
			GrBookID: grBookID,
		},
	}
	var err_ error

	var data_ GetBookResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
