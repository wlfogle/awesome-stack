# 🔍 SENSORS FOR MEDIA STACK MONITORING
# =====================================
# Monitors all services with error handling and proper authentication

# ===============================
# PLEX MEDIA SERVER SENSORS
# ===============================
- platform: rest
  name: "Plex Status"
  resource: "http://192.168.122.230:32400/status/sessions"
  headers:
    X-Plex-Token: "82VPxMS_fCnqpV6N6jUa"
    Accept: "application/json"
  value_template: >
    {% if value_json is defined and value_json.MediaContainer is defined %}
      {{ value_json.MediaContainer.size | default(0) }} active streams
    {% else %}
      0 active streams
    {% endif %}
  scan_interval: 30
  timeout: 10

- platform: rest
  name: "Plex Server Info"
  resource: "http://192.168.122.230:32400/"
  headers:
    X-Plex-Token: "82VPxMS_fCnqpV6N6jUa"
    Accept: "application/json"
  value_template: >
    {% if value_json is defined and value_json.MediaContainer is defined %}
      Online ({{ value_json.MediaContainer.version | default('Unknown') }})
    {% else %}
      Offline
    {% endif %}
  json_attributes:
    - "MediaContainer"
  scan_interval: 300
  timeout: 10

# ===============================
# JELLYFIN MEDIA SERVER SENSORS
# ===============================
- platform: rest
  name: "Jellyfin Status"
  resource: "http://192.168.122.231:8096/System/Info"
  value_template: >
    {% if value_json is defined and value_json.Version is defined %}
      Online ({{ value_json.Version }})
    {% else %}
      Offline
    {% endif %}
  json_attributes:
    - "SystemUpdateLevel"
    - "OperatingSystem" 
    - "ServerName"
  scan_interval: 300
  timeout: 10

- platform: rest
  name: "Jellyfin Sessions"
  resource: "http://192.168.122.231:8096/Sessions"
  value_template: >
    {% if value_json is defined and value_json is iterable %}
      {{ value_json | length }} active sessions
    {% else %}
      0 active sessions
    {% endif %}
  scan_interval: 30
  timeout: 10

# ===============================
# AI SERVICES SENSORS - OLLAMA
# ===============================
- platform: rest
  name: "AI Service Status"
  resource: "http://192.168.122.172:11434/api/version"
  value_template: >
    {% if value_json is defined and value_json.version is defined %}
      Online (v{{ value_json.version }})
    {% else %}
      Offline
    {% endif %}
  json_attributes:
    - "version"
  scan_interval: 60
  timeout: 10

- platform: rest
  name: "AI Models Available"
  resource: "http://192.168.122.172:11434/api/tags"
  value_template: >
    {% if value_json is defined and value_json.models is defined %}
      {{ value_json.models | length }} models loaded
    {% else %}
      0 models loaded
    {% endif %}
  json_attributes:
    - "models"
  scan_interval: 300
  timeout: 15

# ===============================
# TRAEFIK LOAD BALANCER SENSORS
# ===============================
- platform: rest
  name: "Traefik Routes"
  resource: "http://192.168.122.103:9080/api/overview"
  value_template: >
    {% if value_json is defined and value_json.http is defined and value_json.http.routers is defined %}
      {{ value_json.http.routers.total | default(0) }} routes active
    {% else %}
      0 routes active
    {% endif %}
  json_attributes:
    - "http"
    - "tcp"
    - "udp"
  scan_interval: 300
  timeout: 10

# ===============================
# SYSTEM MONITORING SENSORS
# ===============================
# Note: systemmonitor platform is deprecated, using command_line sensors instead
- platform: command_line
  name: "Disk Use Percent"
  command: "df / | tail -1 | awk '{print $5}' | sed 's/%//'"
  unit_of_measurement: "%"
  scan_interval: 300

- platform: command_line
  name: "Memory Use Percent"
  command: "free | grep Mem | awk '{printf \"%.1f\", $3/$2 * 100.0}'"
  unit_of_measurement: "%"
  scan_interval: 60

- platform: command_line
  name: "Processor Use"
  command: "top -bn1 | grep load | awk '{printf \"%.2f\", $(NF-2)}'"
  unit_of_measurement: "%"
  scan_interval: 60

# System temperature (if available)
- platform: command_line
  name: "System Temperature"
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "°C"
  value_template: "{{ (value | int / 1000) | round(1) if value != 'N/A' else 'N/A' }}"
  scan_interval: 60

# ===============================
# CONTAINER HEALTH SENSORS
# ===============================
- platform: rest
  name: "Media Stack Health"
  resource: "http://192.168.122.103:9080/api/overview"
  value_template: >
    {% set plex_ok = states('sensor.plex_status') != 'Offline' %}
    {% set jellyfin_ok = states('sensor.jellyfin_status') != 'Offline' %}
    {% set ai_ok = states('sensor.ai_service_status') != 'Offline' %}
    {% set traefik_ok = states('sensor.traefik_routes') != '0 routes active' %}
    {% set healthy_count = [plex_ok, jellyfin_ok, ai_ok, traefik_ok] | select | list | length %}
    {{ healthy_count }}/4 services healthy
  scan_interval: 120

# ===============================
# PERFORMANCE MONITORING
# ===============================
- platform: template
  sensors:
    system_performance:
      friendly_name: "System Performance"
      value_template: >
        {% set cpu = states('sensor.processor_use') | float(0) %}
        {% set memory = states('sensor.memory_use_percent') | float(0) %}
        {% set disk = states('sensor.disk_use_percent') | float(0) %}
        {% if cpu < 50 and memory < 70 and disk < 80 %}
          Excellent
        {% elif cpu < 70 and memory < 85 and disk < 90 %}
          Good
        {% else %}
          Needs Attention
        {% endif %}
      icon_template: >
        {% set perf = states('sensor.system_performance') %}
        {% if perf == 'Excellent' %}
          mdi:speedometer
        {% elif perf == 'Good' %}
          mdi:speedometer-medium
        {% else %}
          mdi:speedometer-slow
        {% endif %}
